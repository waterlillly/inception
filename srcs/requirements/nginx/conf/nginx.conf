user www-data;										# run nginx worker processes as user instead of root
worker_processes auto;								# automatically create one worker per CPU core to handle requests in parallel

events {											# Events block - required for nginx to handle connections
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;					# include MIME types for proper file handling

    server {
        listen 443 ssl;								# allow only HTTPS (handles IPv4 + IPv6 by default)
        server_name DOMAIN_NAME;                    # replaced by entrypoint using sed from env
        root /var/www/html;							# serve WordPress files from shared volume
        index index.php;

        ssl_protocols TLSv1.2 TLSv1.3;				# SSL/TLS certificates and protocols for HTTPS
		ssl_certificate SSL_CERT_FILE;				# certificates are replaced by entrypoint
        ssl_certificate_key SSL_KEY_FILE;			# TSL = Transport Layer Security -> encryption protocol for HTTPS
        											#		- confidentiality (data is encrypted)
													#		- integrity (data cannot be modified without detection)
													#		- authenticity (ensures the server is who it claims to be)
													# TSL 1.2 -> published in 2008
													# TSL 1.3 -> published in 2018, current standard

        location / {
            try_files $uri $uri/ /index.php?$args;	# try uri as file or directory, fallback to index.php
        }

        location ~ \.php$ {							# Connect nginx to WordPress container
	        include fastcgi.conf;					# automatically includes std fastcgi parameters and other essentials
            fastcgi_pass wordpress:9000;			# 'wordpress' = container name, port = 9000 (php-fpm default)
        }

        location ~ /\.ht {							# Prevents exposure of sensitive Apache config files
            deny all;								# (even though i'm not using apache, wordpress might still have eg. .htaccess files)
        }
    }
}